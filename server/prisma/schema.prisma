generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DB_URI")
}

model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  password    String
  name        String?
  Profile     Profile?
  posts       Post[]
  tweets      Tweet[]
  likedTweets LikedTweet[]
  comments    Comment[]
  Fokkiwing   Following[]
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?
  published Boolean  @default(false)
  viewCount Int      @default(0)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?

}

model Profile {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  bio       String?
  location  String?
  website   String?
  avatar    String?
  userId    Int?     @unique
  User      User?    @relation(fields: [userId], references: [id])
}

model Tweet {
  id        Int          @id @default(autoincrement())
  createdAt DateTime     @default(now())
  content   String?
  author    User?        @relation(fields: [authorId], references: [id])
  authorId  Int?
  likes     LikedTweet[]
  comments  Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  content   String?

  User      User?     @relation(fields: [userId], references: [id])
  userId    Int?
  Tweet     Tweet?    @relation(fields: [tweetId], references: [id])
  tweetId   Int?
  comments  Comment[] @relation("CommentToComment")
  Comment   Comment?  @relation("CommentToComment", fields: [commentId], references: [id])
  commentId Int?
}

model LikedTweet {
  id      Int      @id @default(autoincrement())
  tweet   Tweet    @relation(fields: [tweetId], references: [id])
  likedAt DateTime @default(now())
  userId  Int?
  User    User?    @relation(fields: [userId], references: [id])
  tweetId Int
}

model Following {
  id       Int    @id @default(autoincrement())
  name     String
  avatar   String
  followId Int

  User   User? @relation(fields: [userId], references: [id])
  userId Int?
}
